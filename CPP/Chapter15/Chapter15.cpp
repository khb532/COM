/*
Chapter15 - Exception(예외처리)

*/

/*
예외(Exception)는 프로그램의 실행 도중에 발생하는 문제상황. 프로그램의 논리에 맞지 않는 상황.
	- 문법적인 에러는 예외의 범주에 포함되지 않음.
	- 나이를 입력하라고 했는데, 0보다 작은 값이 입력됨
	- 나눗셈을 하는데, 제수(나누는 수)로 0이 입력됨
	- 주민번호를 입력받는데, -를 포함하여 14자리를 입력받음.


try : 예외발생 예상지역을 블록
	try
	{ 
		// 예외발생 가능한 예상범위
	}

catch : 발생된 예외를 처리하는 코드
	catch(처리할 예외의 종류를 명시)
	{
		// 예외 처리 코드
	}

throw : 예외데이터를 catch로 이동
	throw expn : expn은 변수, 상수, 객체 등 표현 가능한 모든 데이터가 올 수 있고, 예외상황에 대한 정보를 담은 의미 있는 데이터여야 함

	try
	{
		// 예외 발생 범위
	}
	catch(처리할 예외의 종류 명시)	: try-catch는 한 문장으로 이어져야하고, 이 사이에 다른 코드가 올 수 없음
	{
		// 예외 처리 코드
	}
	try 블록에서 발생한 예외처리는 이어서 등장하는 catch에서 처리

	1. try블록을 만나면 그 안에 삽입된 문장이 순서대로 실행
	2. try블록 내에서 예외가 발생하지 않으면 catch블록 이후를 실행
	3. try블록 내에서 예외가 발생하면, 예외가 발생한 지점(throw) 이후의 나머지 try영역은 건너뜀

	*함수내에 throw는 있는데 try-catch문이 없을경우
		- 예외가 처리되지 않으면, 예외가 발생한 함수를 호출한 영역으로 예외 데이터가(+예외처리 책임)전달된다



*/

#include <iostream>

using namespace std;

int main(void)
{
	int num1, num2;
	cout << "두 수를 입력 : ";
	cin >> num1 >> num2;
	// if(num2==0) cout <<"제수는 0이 될수없음"<<endl; : 예외처리의 한 방법 if문

	cout << "나눗셈의 몫 : " << num1 / num2 << endl;
	cout << "나머지 : " << num1 % num2 << endl;

	return 0;
}